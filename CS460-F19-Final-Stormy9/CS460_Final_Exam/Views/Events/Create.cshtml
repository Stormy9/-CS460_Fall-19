@model CS460_Final_Exam.Models.Event

@{
    ViewBag.Title = "Add an Event";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Add an Event</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.EventStart, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.EventStart, new { htmlAttributes = new { @class = "form-control", id = "eventStart" } })

            @Html.ValidationMessageFor(model => model.EventStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- trying to make time picker?  like w/homework tracker lab -->
    @*<div class="form-group">
        @Html.LabelFor(model => model.EventTime, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.EventTime, new { htmlAttributes = new { @class = "form-control", id = "eventStart" } })

            @Html.ValidationMessageFor(model => model.EventTime, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.EventDuration, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.EventDuration, new { htmlAttributes = new { @class = "form-control", id = "eventDur" } })

            @Html.ValidationMessageFor(model => model.EventDuration, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.EventLocation, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.EventLocation, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.EventLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PersonID, "Event Coordinator", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.DropDownList("PersonID", null, htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.PersonID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Event" class="btn btn-default" />
        </div>
    </div>
</div>
}
<!-------------------------------------------------------------------------------------->

<div id="oops">

</div>

<div>
    @Html.ActionLink("Back to Listing of Current Events", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/Main.js"></script>
}
