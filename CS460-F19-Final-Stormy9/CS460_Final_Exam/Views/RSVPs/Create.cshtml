@model CS460_Final_Exam.Models.RSVP

@{
    ViewBag.Title = "Add an RSVP";
    ViewBag.Now = DateTime.Now;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeStamp, new { htmlAttributes = new { @class = "form-control", value=ViewBag.Now } })

                @Html.ValidationMessageFor(model => model.TimeStamp, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PersonID, "Attendee", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownList("PersonID", null, htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.PersonID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.EventID, "Event Title", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownList("EventID", null, htmlAttributes: new { @class = "form-control" })
              
                @Html.ValidationMessageFor(model => model.EventID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List of RSVPs", "Index")
</div>


<!-- testing if 'now' returns -->
<div>now = @ViewBag.Now</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
